__asm__ __volatile__(".globl MAX_SIZE\n"
"	.bss\n"
"	.align 8\n"
"	.type	MAX_SIZE, @object\n"
"	.size	MAX_SIZE, 8\n"
"MAX_SIZE:\n"
"	.zero	8\n"
".globl sito\n"
"	.align 8\n"
"	.type	sito, @object\n"
"	.size	sito, 8\n"
"sito:\n"
"	.zero	8\n"
".globl prime\n"
"	.align 8\n"
"	.type	prime, @object\n"
"	.size	prime, 8\n"
"prime:\n"
"	.zero	8\n"
".globl pc\n"
"	.align 4\n"
"	.type	pc, @object\n"
"	.size	pc, 4\n"
"pc:\n"
"	.zero	4\n"
"	.text\n"
".globl _Z3powxi\n"
"	.type	_Z3powxi, @function\n"
"_Z3powxi:\n"
".LFB451:\n"
"	.cfi_startproc\n"
"	.cfi_personality 0x3,__gxx_personality_v0\n"
"	pushq	%rbp\n"
"	.cfi_def_cfa_offset 16\n"
"	movq	%rsp, %rbp\n"
"	.cfi_offset 6, -16\n"
"	.cfi_def_cfa_register 6\n"
"	movq	%rdi, -24(%rbp)\n"
"	movl	%esi, -28(%rbp)\n"
"	movq	$1, -16(%rbp)\n"
"	movl	$0, -4(%rbp)\n"
"	jmp	.L2\n"
".L3:\n"
"	movq	-16(%rbp), %rax\n"
"	imulq	-24(%rbp), %rax\n"
"	movq	%rax, -16(%rbp)\n"
"	addl	$1, -4(%rbp)\n"
".L2:\n"
"	movl	-4(%rbp), %eax\n"
"	cmpl	-28(%rbp), %eax\n"
"	setl	%al\n"
"	testb	%al, %al\n"
"	jne	.L3\n"
"	movq	-16(%rbp), %rax\n"
"	leave\n"
"	ret\n"
"	.cfi_endproc\n"
".LFE451:\n"
"	.size	_Z3powxi, .-_Z3powxi\n"
"	.section	.rodata\n"
".LC0:\n"
"	.string	\"%d\"\n"
".LC1:\n"
"	.string	\"%lld\"\n"
".LC3:\n"
"	.string	\"1 0\"\n"
".LC4:\n"
"	.string	\"%lld %d\\n\"\n"
".globl _Unwind_Resume\n"
"	.text\n"
".globl main\n"
"	.type	main, @function\n"
"main:\n"
".LFB452:\n"
"	.cfi_startproc\n"
"	.cfi_personality 0x3,__gxx_personality_v0\n"
"	.cfi_lsda 0x3,.LLSDA452\n"
"	pushq	%rbp\n"
"	.cfi_def_cfa_offset 16\n"
"	movq	%rsp, %rbp\n"
"	.cfi_offset 6, -16\n"
"	.cfi_def_cfa_register 6\n"
"	pushq	%rbx\n"
"	subq	$104, %rsp\n"
"	movq	%rsp, %rax\n"
"	movq	%rax, %rbx\n"
"	.cfi_offset 3, -24\n"
"	leaq	-108(%rbp), %rax\n"
"	movq	%rax, %rsi\n"
"	movl	$.LC0, %edi\n"
"	movl	$0, %eax\n"
".LEHB0:\n"
"	call	scanf\n"
"	movl	-108(%rbp), %eax\n"
"	cltq\n"
"	subq	$1, %rax\n"
"	movq	%rax, -104(%rbp)\n"
"	addq	$1, %rax\n"
"	salq	$3, %rax\n"
"	addq	$15, %rax\n"
"	addq	$15, %rax\n"
"	shrq	$4, %rax\n"
"	salq	$4, %rax\n"
"	subq	%rax, %rsp\n"
"	movq	%rsp, %rax\n"
"	addq	$15, %rax\n"
"	shrq	$4, %rax\n"
"	salq	$4, %rax\n"
"	movq	%rax, -96(%rbp)\n"
"	movl	$0, -84(%rbp)\n"
"	jmp	.L6\n"
".L8:\n"
"	movq	-96(%rbp), %rax\n"
"	movl	-84(%rbp), %edx\n"
"	movslq	%edx,%rdx\n"
"	salq	$3, %rdx\n"
"	addq	%rdx, %rax\n"
"	movq	%rax, %rsi\n"
"	movl	$.LC1, %edi\n"
"	movl	$0, %eax\n"
"	call	scanf\n"
"	movl	-84(%rbp), %edx\n"
"	movq	-96(%rbp), %rax\n"
"	movslq	%edx,%rdx\n"
"	movq	(%rax,%rdx,8), %rdx\n"
"	movq	MAX_SIZE(%rip), %rax\n"
"	cmpq	%rax, %rdx\n"
"	jle	.L7\n"
"	movl	-84(%rbp), %edx\n"
"	movq	-96(%rbp), %rax\n"
"	movslq	%edx,%rdx\n"
"	movq	(%rax,%rdx,8), %rax\n"
"	movq	%rax, MAX_SIZE(%rip)\n"
".L7:\n"
"	addl	$1, -84(%rbp)\n"
".L6:\n"
"	movl	-108(%rbp), %eax\n"
"	cmpl	%eax, -84(%rbp)\n"
"	setl	%al\n"
"	testb	%al, %al\n"
"	jne	.L8\n"
"	movq	MAX_SIZE(%rip), %rax\n"
"	cvtsi2sdq	%rax, %xmm1\n"
"	sqrtsd	%xmm1, %xmm0\n"
"	ucomisd	%xmm0, %xmm0\n"
"	jp	.L46\n"
"	je	.L9\n"
".L46:\n"
"	movapd	%xmm1, %xmm0\n"
"	call	sqrt\n"
".L9:\n"
"	movapd	%xmm0, %xmm1\n"
"	movsd	.LC2(%rip), %xmm0\n"
"	addsd	%xmm1, %xmm0\n"
"	cvttsd2siq	%xmm0, %rax\n"
"	movq	%rax, MAX_SIZE(%rip)\n"
"	movq	MAX_SIZE(%rip), %rax\n"
"	addq	$5, %rax\n"
"	movq	%rax, %rdi\n"
"	call	_Znam\n"
"	movq	%rax, sito(%rip)\n"
"	movq	MAX_SIZE(%rip), %rax\n"
"	addq	$5, %rax\n"
"	movq	%rax, %rdx\n"
"	movq	sito(%rip), %rax\n"
"	movl	$0, %esi\n"
"	movq	%rax, %rdi\n"
"	call	memset\n"
"	movl	$3, -80(%rbp)\n"
"	jmp	.L10\n"
".L16:\n"
"	movq	sito(%rip), %rdx\n"
"	movl	-80(%rbp), %eax\n"
"	cltq\n"
"	leaq	(%rdx,%rax), %rax\n"
"	movzbl	(%rax), %eax\n"
"	testb	%al, %al\n"
"	jne	.L43\n"
".L11:\n"
"	movl	pc(%rip), %eax\n"
"	addl	$1, %eax\n"
"	movl	%eax, pc(%rip)\n"
"	movl	-80(%rbp), %eax\n"
"	movslq	%eax,%rdx\n"
"	movl	-80(%rbp), %eax\n"
"	cltq\n"
"	imulq	%rax, %rdx\n"
"	movq	MAX_SIZE(%rip), %rax\n"
"	cmpq	%rax, %rdx\n"
"	jg	.L44\n"
".L13:\n"
"	movl	-80(%rbp), %eax\n"
"	imull	-80(%rbp), %eax\n"
"	movl	%eax, -76(%rbp)\n"
"	jmp	.L14\n"
".L15:\n"
"	movq	sito(%rip), %rdx\n"
"	movl	-76(%rbp), %eax\n"
"	cltq\n"
"	leaq	(%rdx,%rax), %rax\n"
"	movb	$1, (%rax)\n"
"	movl	-80(%rbp), %eax\n"
"	addl	%eax, -76(%rbp)\n"
".L14:\n"
"	movl	-76(%rbp), %eax\n"
"	movslq	%eax,%rdx\n"
"	movq	MAX_SIZE(%rip), %rax\n"
"	cmpq	%rax, %rdx\n"
"	setle	%al\n"
"	testb	%al, %al\n"
"	jne	.L15\n"
"	jmp	.L12\n"
".L43:\n"
"	nop\n"
"	jmp	.L12\n"
".L44:\n"
"	nop\n"
".L12:\n"
"	addl	$2, -80(%rbp)\n"
".L10:\n"
"	movl	-80(%rbp), %eax\n"
"	movslq	%eax,%rdx\n"
"	movq	MAX_SIZE(%rip), %rax\n"
"	cmpq	%rax, %rdx\n"
"	setle	%al\n"
"	testb	%al, %al\n"
"	jne	.L16\n"
"	movl	pc(%rip), %eax\n"
"	addl	$2, %eax\n"
"	cltq\n"
"	salq	$2, %rax\n"
"	movq	%rax, %rdi\n"
"	call	_Znam\n"
"	movq	%rax, prime(%rip)\n"
"	movq	prime(%rip), %rax\n"
"	movq	%rax, -72(%rbp)\n"
"	movq	-72(%rbp), %rax\n"
"	movl	$2, (%rax)\n"
"	addq	$4, -72(%rbp)\n"
"	movl	$3, -64(%rbp)\n"
"	jmp	.L17\n"
".L19:\n"
"	movq	sito(%rip), %rdx\n"
"	movl	-64(%rbp), %eax\n"
"	cltq\n"
"	leaq	(%rdx,%rax), %rax\n"
"	movzbl	(%rax), %eax\n"
"	xorl	$1, %eax\n"
"	testb	%al, %al\n"
"	je	.L18\n"
"	movq	-72(%rbp), %rax\n"
"	movl	-64(%rbp), %edx\n"
"	movl	%edx, (%rax)\n"
"	addq	$4, -72(%rbp)\n"
".L18:\n"
"	addl	$2, -64(%rbp)\n"
".L17:\n"
"	movl	-64(%rbp), %eax\n"
"	movslq	%eax,%rdx\n"
"	movq	MAX_SIZE(%rip), %rax\n"
"	cmpq	%rax, %rdx\n"
"	setle	%al\n"
"	testb	%al, %al\n"
"	jne	.L19\n"
"	movq	-72(%rbp), %rax\n"
"	movl	$100000007, (%rax)\n"
"	addq	$4, -72(%rbp)\n"
"	movq	sito(%rip), %rax\n"
"	testq	%rax, %rax\n"
"	je	.L20\n"
"	movq	sito(%rip), %rax\n"
"	movq	%rax, %rdi\n"
"	call	_ZdaPv\n"
".L20:\n"
"	movl	$0, -60(%rbp)\n"
"	jmp	.L21\n"
".L38:\n"
"	movq	$1, -40(%rbp)\n"
"	movl	$0, -112(%rbp)\n"
"	movl	-60(%rbp), %edx\n"
"	movq	-96(%rbp), %rax\n"
"	movslq	%edx,%rdx\n"
"	movq	(%rax,%rdx,8), %rax\n"
"	movq	%rax, -56(%rbp)\n"
"	movq	-56(%rbp), %rax\n"
"	movq	%rax, -48(%rbp)\n"
"	cmpq	$1, -56(%rbp)\n"
"	jne	.L24\n"
"	movl	$.LC3, %edi\n"
"	call	puts\n"
"	jmp	.L23\n"
".L25:\n"
"	movl	-112(%rbp), %eax\n"
"	addl	$1, %eax\n"
"	movl	%eax, -112(%rbp)\n"
"	sarq	-56(%rbp)\n"
".L24:\n"
"	movq	-56(%rbp), %rax\n"
"	andl	$1, %eax\n"
"	testq	%rax, %rax\n"
"	sete	%al\n"
"	testb	%al, %al\n"
"	jne	.L25\n"
"	movl	-112(%rbp), %eax\n"
"	testl	%eax, %eax\n"
"	jle	.L26\n"
"	movl	-112(%rbp), %eax\n"
"	movl	$1, %edx\n"
"	movq	%rdx, %rsi\n"
"	movl	%eax, %ecx\n"
"	salq	%cl, %rsi\n"
"	movl	-112(%rbp), %eax\n"
"	subl	$1, %eax\n"
"	movl	$1, %edx\n"
"	movq	%rdx, %rdi\n"
"	movl	%eax, %ecx\n"
"	salq	%cl, %rdi\n"
"	movq	%rdi, %rax\n"
"	movq	%rsi, %rdx\n"
"	subq	%rax, %rdx\n"
"	movq	%rdx, %rax\n"
"	movq	%rax, -40(%rbp)\n"
".L26:\n"
"	movl	$1, -24(%rbp)\n"
"	jmp	.L27\n"
".L34:\n"
"	movl	$0, -112(%rbp)\n"
"	movq	prime(%rip), %rax\n"
"	movl	-24(%rbp), %edx\n"
"	movslq	%edx,%rdx\n"
"	salq	$2, %rdx\n"
"	addq	%rdx, %rax\n"
"	movl	(%rax), %eax\n"
"	movl	%eax, -20(%rbp)\n"
"	jmp	.L28\n"
".L29:\n"
"	movl	-112(%rbp), %eax\n"
"	addl	$1, %eax\n"
"	movl	%eax, -112(%rbp)\n"
"	movl	-20(%rbp), %eax\n"
"	movslq	%eax,%rdx\n"
"	movq	-56(%rbp), %rax\n"
"	movq	%rdx, %rcx\n"
"	movq	%rax, %rdx\n"
"	sarq	$63, %rdx\n"
"	idivq	%rcx\n"
"	movq	%rax, -56(%rbp)\n"
".L28:\n"
"	movl	-20(%rbp), %eax\n"
"	movslq	%eax,%rdx\n"
"	movq	-56(%rbp), %rax\n"
"	movq	%rdx, %rdi\n"
"	movq	%rax, %rdx\n"
"	sarq	$63, %rdx\n"
"	idivq	%rdi\n"
"	movq	%rdx, %rax\n"
"	testq	%rax, %rax\n"
"	sete	%al\n"
"	testb	%al, %al\n"
"	jne	.L29\n"
"	movl	-112(%rbp), %eax\n"
"	testl	%eax, %eax\n"
"	je	.L45\n"
".L30:\n"
"	movl	-112(%rbp), %eax\n"
"	leal	-1(%rax), %edx\n"
"	movl	-20(%rbp), %eax\n"
"	cltq\n"
"	movl	%edx, %esi\n"
"	movq	%rax, %rdi\n"
"	call	_Z3powxi\n"
"	movl	-20(%rbp), %edx\n"
"	subl	$1, %edx\n"
"	movslq	%edx,%rdx\n"
"	imulq	%rdx, %rax\n"
"	movq	-40(%rbp), %rdx\n"
"	imulq	%rdx, %rax\n"
"	movq	%rax, -40(%rbp)\n"
"	jmp	.L31\n"
".L45:\n"
"	nop\n"
".L31:\n"
"	addl	$1, -24(%rbp)\n"
".L27:\n"
"	movq	prime(%rip), %rax\n"
"	movl	-24(%rbp), %edx\n"
"	movslq	%edx,%rdx\n"
"	salq	$2, %rdx\n"
"	addq	%rdx, %rax\n"
"	movl	(%rax), %edx\n"
"	movq	prime(%rip), %rax\n"
"	movl	-24(%rbp), %ecx\n"
"	movslq	%ecx,%rcx\n"
"	salq	$2, %rcx\n"
"	addq	%rcx, %rax\n"
"	movl	(%rax), %eax\n"
"	imull	%edx, %eax\n"
"	cltq\n"
"	cmpq	-56(%rbp), %rax\n"
"	jg	.L32\n"
"	movl	pc(%rip), %eax\n"
"	cmpl	%eax, -24(%rbp)\n"
"	jg	.L32\n"
"	movl	$1, %eax\n"
"	jmp	.L33\n"
".L32:\n"
"	movl	$0, %eax\n"
".L33:\n"
"	testb	%al, %al\n"
"	jne	.L34\n"
"	cmpq	$1, -56(%rbp)\n"
"	jle	.L35\n"
"	movq	-56(%rbp), %rax\n"
"	leaq	-1(%rax), %rdx\n"
"	movq	-40(%rbp), %rax\n"
"	imulq	%rdx, %rax\n"
"	movq	%rax, -40(%rbp)\n"
".L35:\n"
"	cvtsi2sdq	-48(%rbp), %xmm0\n"
"	call	sqrt\n"
"	cvttsd2si	%xmm0, %eax\n"
"	movl	%eax, -112(%rbp)\n"
"	movq	prime(%rip), %rax\n"
"	movl	pc(%rip), %edx\n"
"	movslq	%edx,%rdx\n"
"	addq	$1, %rdx\n"
"	salq	$2, %rdx\n"
"	leaq	(%rax,%rdx), %rcx\n"
"	movq	prime(%rip), %rax\n"
"	leaq	-112(%rbp), %rdx\n"
"	movq	%rcx, %rsi\n"
"	movq	%rax, %rdi\n"
"	call	_ZSt11lower_boundIPiiET_S1_S1_RKT0_\n"
"	movq	%rax, %rdx\n"
"	movq	prime(%rip), %rax\n"
"	movq	%rdx, %rcx\n"
"	subq	%rax, %rcx\n"
"	movq	%rcx, %rax\n"
"	sarq	$2, %rax\n"
"	movl	%eax, -28(%rbp)\n"
"	movq	prime(%rip), %rax\n"
"	movl	-28(%rbp), %edx\n"
"	movslq	%edx,%rdx\n"
"	salq	$2, %rdx\n"
"	addq	%rdx, %rax\n"
"	movl	(%rax), %edx\n"
"	movl	-112(%rbp), %eax\n"
"	cmpl	%eax, %edx\n"
"	jne	.L36\n"
"	movl	-28(%rbp), %eax\n"
"	addl	$1, %eax\n"
"	jmp	.L37\n"
".L36:\n"
"	movl	-28(%rbp), %eax\n"
".L37:\n"
"	movq	-40(%rbp), %rcx\n"
"	movl	%eax, %edx\n"
"	movq	%rcx, %rsi\n"
"	movl	$.LC4, %edi\n"
"	movl	$0, %eax\n"
"	call	printf\n"
".LEHE0:\n"
".L23:\n"
"	addl	$1, -60(%rbp)\n"
".L21:\n"
"	movl	-108(%rbp), %eax\n"
"	cmpl	%eax, -60(%rbp)\n"
"	setl	%al\n"
"	testb	%al, %al\n"
"	jne	.L38\n"
"	movq	prime(%rip), %rax\n"
"	testq	%rax, %rax\n"
"	je	.L39\n"
"	movq	prime(%rip), %rax\n"
"	movq	%rax, %rdi\n"
"	call	_ZdaPv\n"
".L39:\n"
"	movl	$0, %eax\n"
"	movq	%rbx, %rsp\n"
"	movq	-8(%rbp), %rbx\n"
"	leave\n"
"	ret\n"
".L42:\n"
".L40:\n"
"	movq	%rbx, %rsp\n"
"	movslq	%edx,%rdx\n"
"	movq	%rax, %rdi\n"
".LEHB1:\n"
"	call	_Unwind_Resume\n"
".LEHE1:\n"
"	.cfi_endproc\n"
".LFE452:\n"
"	.size	main, .-main\n"
".globl __gxx_personality_v0\n"
"	.section	.gcc_except_table,\"a\",@progbits\n"
".LLSDA452:\n"
"	.byte	0xff\n"
"	.byte	0xff\n"
"	.byte	0x1\n"
"	.uleb128 .LLSDACSE452-.LLSDACSB452\n"
".LLSDACSB452:\n"
"	.uleb128 .LEHB0-.LFB452\n"
"	.uleb128 .LEHE0-.LEHB0\n"
"	.uleb128 .L42-.LFB452\n"
"	.uleb128 0x0\n"
"	.uleb128 .LEHB1-.LFB452\n"
"	.uleb128 .LEHE1-.LEHB1\n"
"	.uleb128 0x0\n"
"	.uleb128 0x0\n"
".LLSDACSE452:\n"
"	.text\n"
"	.section	.text._ZSt11lower_boundIPiiET_S1_S1_RKT0_,\"axG\",@progbits,_ZSt11lower_boundIPiiET_S1_S1_RKT0_,comdat\n"
"	.weak	_ZSt11lower_boundIPiiET_S1_S1_RKT0_\n"
"	.type	_ZSt11lower_boundIPiiET_S1_S1_RKT0_, @function\n"
"_ZSt11lower_boundIPiiET_S1_S1_RKT0_:\n"
".LFB453:\n"
"	.cfi_startproc\n"
"	.cfi_personality 0x3,__gxx_personality_v0\n"
"	pushq	%rbp\n"
"	.cfi_def_cfa_offset 16\n"
"	movq	%rsp, %rbp\n"
"	.cfi_offset 6, -16\n"
"	.cfi_def_cfa_register 6\n"
"	subq	$64, %rsp\n"
"	movq	%rdi, -40(%rbp)\n"
"	movq	%rsi, -48(%rbp)\n"
"	movq	%rdx, -56(%rbp)\n"
"	movq	-48(%rbp), %rdx\n"
"	movq	-40(%rbp), %rax\n"
"	movq	%rdx, %rsi\n"
"	movq	%rax, %rdi\n"
"	call	_ZSt8distanceIPiENSt15iterator_traitsIT_E15difference_typeES2_S2_\n"
"	movq	%rax, -16(%rbp)\n"
"	jmp	.L48\n"
".L50:\n"
"	movq	-16(%rbp), %rax\n"
"	sarq	%rax\n"
"	movq	%rax, -8(%rbp)\n"
"	movq	-40(%rbp), %rax\n"
"	movq	%rax, -24(%rbp)\n"
"	movq	-8(%rbp), %rdx\n"
"	leaq	-24(%rbp), %rax\n"
"	movq	%rdx, %rsi\n"
"	movq	%rax, %rdi\n"
"	call	_ZSt7advanceIPilEvRT_T0_\n"
"	movq	-24(%rbp), %rax\n"
"	movl	(%rax), %edx\n"
"	movq	-56(%rbp), %rax\n"
"	movl	(%rax), %eax\n"
"	cmpl	%eax, %edx\n"
"	jge	.L49\n"
"	movq	-24(%rbp), %rax\n"
"	movq	%rax, -40(%rbp)\n"
"	addq	$4, -40(%rbp)\n"
"	movq	-8(%rbp), %rax\n"
"	movq	-16(%rbp), %rdx\n"
"	movq	%rdx, %rcx\n"
"	subq	%rax, %rcx\n"
"	movq	%rcx, %rax\n"
"	subq	$1, %rax\n"
"	movq	%rax, -16(%rbp)\n"
"	jmp	.L48\n"
".L49:\n"
"	movq	-8(%rbp), %rax\n"
"	movq	%rax, -16(%rbp)\n"
".L48:\n"
"	cmpq	$0, -16(%rbp)\n"
"	setg	%al\n"
"	testb	%al, %al\n"
"	jne	.L50\n"
"	movq	-40(%rbp), %rax\n"
"	leave\n"
"	ret\n"
"	.cfi_endproc\n"
".LFE453:\n"
"	.size	_ZSt11lower_boundIPiiET_S1_S1_RKT0_, .-_ZSt11lower_boundIPiiET_S1_S1_RKT0_\n"
"	.section	.text._ZSt8distanceIPiENSt15iterator_traitsIT_E15difference_typeES2_S2_,\"axG\",@progbits,_ZSt8distanceIPiENSt15iterator_traitsIT_E15difference_typeES2_S2_,comdat\n"
"	.weak	_ZSt8distanceIPiENSt15iterator_traitsIT_E15difference_typeES2_S2_\n"
"	.type	_ZSt8distanceIPiENSt15iterator_traitsIT_E15difference_typeES2_S2_, @function\n"
"_ZSt8distanceIPiENSt15iterator_traitsIT_E15difference_typeES2_S2_:\n"
".LFB454:\n"
"	.cfi_startproc\n"
"	.cfi_personality 0x3,__gxx_personality_v0\n"
"	pushq	%rbp\n"
"	.cfi_def_cfa_offset 16\n"
"	movq	%rsp, %rbp\n"
"	.cfi_offset 6, -16\n"
"	.cfi_def_cfa_register 6\n"
"	pushq	%rbx\n"
"	subq	$40, %rsp\n"
"	movq	%rdi, -24(%rbp)\n"
"	movq	%rsi, -32(%rbp)\n"
"	leaq	-24(%rbp), %rax\n"
"	movq	%rax, %rdi\n"
"	.cfi_offset 3, -24\n"
"	call	_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_\n"
"	movq	-24(%rbp), %rax\n"
"	movq	-32(%rbp), %rdx\n"
"	movb	%bl, (%rsp)\n"
"	movq	%rdx, %rsi\n"
"	movq	%rax, %rdi\n"
"	call	_ZSt10__distanceIPiENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag\n"
"	addq	$40, %rsp\n"
"	popq	%rbx\n"
"	leave\n"
"	ret\n"
"	.cfi_endproc\n"
".LFE454:\n"
"	.size	_ZSt8distanceIPiENSt15iterator_traitsIT_E15difference_typeES2_S2_, .-_ZSt8distanceIPiENSt15iterator_traitsIT_E15difference_typeES2_S2_\n"
"	.section	.text._ZSt7advanceIPilEvRT_T0_,\"axG\",@progbits,_ZSt7advanceIPilEvRT_T0_,comdat\n"
"	.weak	_ZSt7advanceIPilEvRT_T0_\n"
"	.type	_ZSt7advanceIPilEvRT_T0_, @function\n"
"_ZSt7advanceIPilEvRT_T0_:\n"
".LFB455:\n"
"	.cfi_startproc\n"
"	.cfi_personality 0x3,__gxx_personality_v0\n"
"	pushq	%rbp\n"
"	.cfi_def_cfa_offset 16\n"
"	movq	%rsp, %rbp\n"
"	.cfi_offset 6, -16\n"
"	.cfi_def_cfa_register 6\n"
"	pushq	%rbx\n"
"	subq	$56, %rsp\n"
"	movq	%rdi, -40(%rbp)\n"
"	movq	%rsi, -48(%rbp)\n"
"	movq	-48(%rbp), %rax\n"
"	movq	%rax, -24(%rbp)\n"
"	movq	-40(%rbp), %rax\n"
"	movq	%rax, %rdi\n"
"	.cfi_offset 3, -24\n"
"	call	_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_\n"
"	movq	-24(%rbp), %rdx\n"
"	movq	-40(%rbp), %rax\n"
"	movb	%bl, (%rsp)\n"
"	movq	%rdx, %rsi\n"
"	movq	%rax, %rdi\n"
"	call	_ZSt9__advanceIPilEvRT_T0_St26random_access_iterator_tag\n"
"	addq	$56, %rsp\n"
"	popq	%rbx\n"
"	leave\n"
"	ret\n"
"	.cfi_endproc\n"
".LFE455:\n"
"	.size	_ZSt7advanceIPilEvRT_T0_, .-_ZSt7advanceIPilEvRT_T0_\n"
"	.section	.text._ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_,\"axG\",@progbits,_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_,comdat\n"
"	.weak	_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_\n"
"	.type	_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_, @function\n"
"_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_:\n"
".LFB456:\n"
"	.cfi_startproc\n"
"	.cfi_personality 0x3,__gxx_personality_v0\n"
"	pushq	%rbp\n"
"	.cfi_def_cfa_offset 16\n"
"	movq	%rsp, %rbp\n"
"	.cfi_offset 6, -16\n"
"	.cfi_def_cfa_register 6\n"
"	movq	%rdi, -8(%rbp)\n"
"	leave\n"
"	ret\n"
"	.cfi_endproc\n"
".LFE456:\n"
"	.size	_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_, .-_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_\n"
"	.section	.text._ZSt10__distanceIPiENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag,\"axG\",@progbits,_ZSt10__distanceIPiENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag,comdat\n"
"	.weak	_ZSt10__distanceIPiENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag\n"
"	.type	_ZSt10__distanceIPiENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag, @function\n"
"_ZSt10__distanceIPiENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag:\n"
".LFB457:\n"
"	.cfi_startproc\n"
"	.cfi_personality 0x3,__gxx_personality_v0\n"
"	pushq	%rbp\n"
"	.cfi_def_cfa_offset 16\n"
"	movq	%rsp, %rbp\n"
"	.cfi_offset 6, -16\n"
"	.cfi_def_cfa_register 6\n"
"	movq	%rdi, -8(%rbp)\n"
"	movq	%rsi, -16(%rbp)\n"
"	movq	-16(%rbp), %rdx\n"
"	movq	-8(%rbp), %rax\n"
"	movq	%rdx, %rcx\n"
"	subq	%rax, %rcx\n"
"	movq	%rcx, %rax\n"
"	sarq	$2, %rax\n"
"	leave\n"
"	ret\n"
"	.cfi_endproc\n"
".LFE457:\n"
"	.size	_ZSt10__distanceIPiENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag, .-_ZSt10__distanceIPiENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag\n"
"	.section	.text._ZSt9__advanceIPilEvRT_T0_St26random_access_iterator_tag,\"axG\",@progbits,_ZSt9__advanceIPilEvRT_T0_St26random_access_iterator_tag,comdat\n"
"	.weak	_ZSt9__advanceIPilEvRT_T0_St26random_access_iterator_tag\n"
"	.type	_ZSt9__advanceIPilEvRT_T0_St26random_access_iterator_tag, @function\n"
"_ZSt9__advanceIPilEvRT_T0_St26random_access_iterator_tag:\n"
".LFB458:\n"
"	.cfi_startproc\n"
"	.cfi_personality 0x3,__gxx_personality_v0\n"
"	pushq	%rbp\n"
"	.cfi_def_cfa_offset 16\n"
"	movq	%rsp, %rbp\n"
"	.cfi_offset 6, -16\n"
"	.cfi_def_cfa_register 6\n"
"	movq	%rdi, -8(%rbp)\n"
"	movq	%rsi, -16(%rbp)\n"
"	movq	-8(%rbp), %rax\n"
"	movq	(%rax), %rax\n"
"	movq	-16(%rbp), %rdx\n"
"	salq	$2, %rdx\n"
"	leaq	(%rax,%rdx), %rdx\n"
"	movq	-8(%rbp), %rax\n"
"	movq	%rdx, (%rax)\n"
"	leave\n"
"	ret\n"
"	.cfi_endproc\n"
".LFE458:\n"
"	.size	_ZSt9__advanceIPilEvRT_T0_St26random_access_iterator_tag, .-_ZSt9__advanceIPilEvRT_T0_St26random_access_iterator_tag\n"
"	.section	.rodata\n"
"	.align 8\n"
".LC2:\n"
"	.long	0\n"
"	.long	1073741824\n"
);